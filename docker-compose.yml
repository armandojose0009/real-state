services:
  api:
    build: .
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN}
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - SQS_ENDPOINT=http://localstack:4566
      - SQS_QUEUE_NAME=${SQS_QUEUE_NAME:-real-estate-queue}
      - AWS_S3_ENDPOINT=http://localstack:4566
      - AWS_S3_BUCKET=${AWS_S3_BUCKET:-real-estate-bucket}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      localstack:
        condition: service_started
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - real-estate-network

  postgres:
    image: postgis/postgis:14-3.3
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME}']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - real-estate-network

  redis:
    image: redis:6-alpine
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - real-estate-network

  localstack:
    image: localstack/localstack:latest
    ports:
      - '4566:4566'
      - '4571:4571'
    environment:
      - SERVICES=sqs,s3 # Agregar s3 a los servicios
      - DEFAULT_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=${AWS_REGION:-us-east-1}
      - DEBUG=1
      - EDGE_PORT=4566
      - HOSTNAME_EXTERNAL=localstack
    volumes:
      - ./scripts/localstack-init.sh:/docker-entrypoint-initaws.d/localstack-init.sh
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4566/health']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - real-estate-network

volumes:
  postgres_data:
  redis_data:

networks:
  real-estate-network:
    driver: bridge
